stages:
  - test
  - build
  - deploy

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"

cache:
  paths:
    - .m2/repository

test:
  stage: test
  image: maven:3.8.4-openjdk-17
  script:
    - mvn clean test -Dspring.profiles.active=test
    - mvn verify -Dspring.profiles.active=test
    - mvn checkstyle:check spotbugs:check
  artifacts:
    when: on_failure
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml
    paths:
      - target/surefire-reports/
    expire_in: 1 week

build:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
    - docker build -t $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
    - master

deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh -o StrictHostKeyChecking=no $VPS_USERNAME@$VPS_HOST "mkdir -p ~/pixelbook"
    - scp docker-compose.yml $VPS_USERNAME@$VPS_HOST:~/pixelbook/
    - ssh $VPS_USERNAME@$VPS_HOST "cd ~/pixelbook && \
        echo 'VERSION=$CI_COMMIT_SHA' > .env && \
        echo 'REGISTRY=$CI_REGISTRY' >> .env && \
        echo 'IMAGE=$CI_REGISTRY_IMAGE' >> .env && \
        docker-compose pull && \
        docker-compose down && \
        docker-compose up -d"
  environment:
    name: production
    url: http://$VPS_HOST
  only:
    - master